name: Test of Run Command with CASL2 Sample Files

on:
  push:
  pull_request:

jobs:

  test_run:

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    name: Run Tests with Firefox and Chrome

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      # Python 3.9をインストールする
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # ubuntu, macosのときはFirefoxの最新版をインストールする
      - name: Set up Firefox on Ubuntu or MacOS
        uses: browser-actions/setup-firefox@latest
        if: matrix.os != 'windows-latest'
        with:
          firefox-version: 'latest'

      # windowsのときはFirefoxの84.0をインストールする
      - name: Set up Firefox on Windows
        uses: browser-actions/setup-firefox@latest
        if: matrix.os == 'windows-latest'
        with:
          firefox-version: "84.0"

      # Chromeのstable版をインストールする
      - name: Set up Chrome
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable

      # テストの依存モジュールをインストールする
      - name: Set up Test Dependency modules(windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: powershell -NoProfile -ExecutionPolicy Unrestricted ./setup_test.ps1
        working-directory: ./test
      - name: Set up Test Dependency modules(posix)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: bash ./setup_test.sh
        working-directory: ./test

      # pytest を実行する
      - name: Run Test
        run: python -m pytest --junit-xml result-${{ matrix.os }}.xml
        working-directory: ./test

      # テスト結果を出力する
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          check_name: Result Summary of ${{ matrix.os }}
          report_paths: 'test/*.xml'